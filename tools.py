from models import User


def generate_string_for_top(users: list[User], is_global=False) -> str:
    if is_global:
        string = 'ü™ñ–¢–æ–ø 10 –∞—Ä–º–∏–π –≤ –º–∏—Ä–µ:\n'
    else:
        string = 'ü™ñ–¢–æ–ø 10 –∞—Ä–º–∏–π –≤ –≥—Ä—É–ø–ø–µ:\n'
    for i, user in enumerate(users):
        string += (
            f'{i + 1}. üéÑ({get_rank(user.soldiers_count)})'
            f'{user.first_name} - {user.soldiers_count}'
            f'({user.wins} –ø–æ–±–µ–¥, {user.defeats} –ø–æ—Ä–∞–∂–µ–Ω–∏–π)üéÑ\n'
        )
    return string


def incline_soldier(number: int) -> str:
    if str(number)[-1] in '10' or number < 20:
        return '—Å–æ–ª–¥–∞—Ç'
    return '—Å–æ–ª–¥–∞—Ç–∞'


def get_rank(soldiers_count: int) -> str:
    ranks = {
        '–†—è–¥–æ–≤–æ–π': 50,
        '–ï—Ñ—Ä–µ–π—Ç–æ—Ä': 100,
        '–°–µ—Ä–∂–∞–Ω—Ç': 200,
        '–°—Ç–∞—Ä—à–∏–Ω–∞': 300,
        '–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç': 500,
        '–ö–∞–ø–∏—Ç–∞–Ω': 1000,
        '–ú–∞–π–æ—Ä': 1500,
        '–ü–æ–ª–∫–æ–≤–Ω–∏–∫': 2000,
        '–ì–µ–Ω–µ—Ä–∞–ª': 3000,
    }
    rank = ''
    for key, val in ranks.items():
        if soldiers_count <= val:
            rank = key
            break
    return rank if rank else '–ú–∞—Ä—à–∞–ª'


def is_user_can_raid(
    attacking_user: User, defending_user: User
) -> tuple[bool, str | None]:
    if attacking_user.raided_today:
        return False, 'raided_today'
    if attacking_user.telegram_id == defending_user.telegram_id:
        return False, 'attacked_himself'
    if attacking_user.soldiers_count < 10:
        return False, 'attacking_user_has_fewer_soldiers'
    if defending_user is None:
        return False, 'defending_user_not_found'
    if defending_user.soldiers_count < 10:
        return False, 'defending_user_has_fewer_soldiers'
    return True, None
